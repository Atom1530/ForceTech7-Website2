// src/js/artists/features/player.js
import { UISound } from "../lib/sound.js";

const SPRITE = "/img/sprite.svg";
const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);

// –ì–ª–æ–±–∞–ª—å–Ω–æ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–º–∏—Å –∑–∞–≥—Ä—É–∑–∫–∏ YT API
let __ytReadyPromise = null;
function loadYTAPI() {
  if (window.YT && window.YT.Player) return Promise.resolve();
  if (__ytReadyPromise) return __ytReadyPromise;
  __ytReadyPromise = new Promise((resolve, reject) => {
    const tag = document.createElement("script");
    tag.src = "https://www.youtube.com/iframe_api";
    tag.onerror = () => reject(new Error("YT API load failed"));
    document.head.appendChild(tag);
    const t = setTimeout(() => reject(new Error("YT API timeout")), 20000);
    window.onYouTubeIframeAPIReady = () => { clearTimeout(t); resolve(); };
  });
  return __ytReadyPromise;
}

function getYouTubeId(url) {
  try {
    const u = new URL(url);
    if (/youtu\.be$/.test(u.hostname)) return u.pathname.slice(1);
    if (u.searchParams.get("v")) return u.searchParams.get("v");
    const m = u.pathname.match(/\/(embed|shorts|v)\/([^/?#]+)/);
    return m ? m[2] : "";
  } catch { return ""; }
}

// –î–µ—Ä–∂–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –º–æ–¥–∞–ª–∫—É
const instances = new WeakMap();

/**
 * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç –º–∏–Ω–∏-–ø–ª–µ–µ—Ä –∫ –º–æ–¥–∞–ª–∫–µ (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–∫ –ø–æ .yt)
 * @param {HTMLElement} modalEl
 */
export function createMiniPlayer(modalEl) {
  if (!modalEl || !(modalEl instanceof HTMLElement)) {
    throw new Error("createMiniPlayer: modal element not found/invalid");
  }
  if (instances.has(modalEl)) return; // —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ

  const dialog = modalEl.querySelector(".amodal__dialog");
  if (!dialog) throw new Error("createMiniPlayer: dialog not found");

  // –î–æ–∫ —Å –ø–ª–µ–µ—Ä–æ–º
  const dock = document.createElement("div");
  dock.className = "am-player";
  dock.innerHTML = `
    <div class="am-player__inner" role="region" aria-label="YouTube mini player">
      <div class="am-player__frame" id="am-player-frame"></div>
      <div class="am-player__bar">
        <a class="am-player__yt" href="#" target="_blank" rel="noopener noreferrer">Open on YouTube ‚Üó</a>
        <div class="am-player__volwrap">
          <button class="am-player__mute" type="button" aria-label="Mute/Unmute">üîà</button>
          <input class="am-player__slider" type="range" min="0" max="100" value="60" step="1" aria-label="Volume">
        </div>
        <button class="am-player__close" type="button" aria-label="Close player">√ó</button>
      </div>
    </div>`;
  dialog.appendChild(dock);

  const frame    = dock.querySelector(".am-player__frame");
  const openLink = dock.querySelector(".am-player__yt");
  const volWrap  = dock.querySelector(".am-player__volwrap");
  const slider   = dock.querySelector(".am-player__slider");
  const muteBtn  = dock.querySelector(".am-player__mute");
  const closeBtn = dock.querySelector(".am-player__close");

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ
  const state = {
    player: null,
    currentVol: 60,
    muted: false,
    usingFallback: false,
    lastUrl: "",
  };

  // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–∞–º .yt –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª–∫–∏
  const onModalClick = (e) => {
    const a = e.target.closest("a.yt");
    if (!a || !modalEl.contains(a)) return;
    e.preventDefault();
    UISound.tap();
    openPlayer(a.href);
  };

  // –ó–∞–∫—Ä—ã—Ç—å –¥–æ–∫
  const onClose = () => {
    UISound.tap();
    stopAndHide();
  };

  // –ú—å—é—Ç/–∞–Ω–º—å—é—Ç
  const onMute = () => {
    UISound.tap();
    state.muted = !state.muted;
    if (!state.usingFallback && state.player) {
      if (state.muted) state.player.mute();
      else state.player.unMute();
    }
    muteBtn.textContent = state.muted ? "üîá" : "üîà";
  };

  // –ì—Ä–æ–º–∫–æ—Å—Ç—å
  const onVol = () => {
    state.currentVol = Number(slider.value) || 0;
    if (!state.usingFallback && state.player && state.player.setVolume) {
      state.player.setVolume(state.currentVol);
    }
    if (state.currentVol === 0) {
      state.muted = true;
      muteBtn.textContent = "üîá";
      if (!state.usingFallback && state.player?.mute) state.player.mute();
    } else if (state.muted) {
      state.muted = false;
      muteBtn.textContent = "üîà";
      if (!state.usingFallback && state.player?.unMute) state.player.unMute();
    }
  };

  // iOS ‚Äî –∞–ø–ø–∞—Ä–∞—Ç–Ω–∞—è —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞
  if (isIOS) {
    slider.disabled = true;
    slider.title = "–ù–∞ iOS –≥—Ä–æ–º–∫–æ—Å—Ç—å —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ";
  }

  closeBtn.addEventListener("click", onClose);
  muteBtn.addEventListener("click", onMute);
  slider.addEventListener("input", onVol);
  modalEl.addEventListener("click", onModalClick);

  // –•—Ä–∞–Ω–∏–º
  instances.set(modalEl, {
    dock, frame, openLink, volWrap, slider, muteBtn, closeBtn,
    onModalClick, onClose, onMute, onVol, dialog, state
  });

  /* --- helpers –≤–Ω—É—Ç—Ä–∏ createMiniPlayer --- */

  function showDock() {
    dock.classList.add("am-player--active");
  }
  function hideDock() {
    dock.classList.remove("am-player--active");
  }

  // –û—Ç–∫—Ä—ã—Ç—å (–∏–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å) –≤–∏–¥–µ–æ
  async function openPlayer(url) {
    const id = getYouTubeId(url);
    if (!id) { window.__toast?.error?.("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–∏–¥–µ–æ."); return; }
    state.lastUrl = url;
    openLink.href = url;
    showDock();

    try {
      await loadYTAPI();
      // –ü–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä YT (—á–∏—Å—Ç—ã–π div)
      frame.innerHTML = `<div id="am-player-yt"></div>`;
      state.usingFallback = false;

      // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä ‚Äî —É–Ω–∏—á—Ç–æ–∂–∏–º
      if (state.player) {
        try { state.player.stopVideo?.(); state.player.destroy?.(); } catch {}
        state.player = null;
      }

      state.player = new YT.Player("am-player-yt", {
        host: "https://www.youtube-nocookie.com",
        videoId: id,
        playerVars: {
          autoplay: 1, rel: 0, modestbranding: 1, controls: 1, enablejsapi: 1,
          origin: location.origin
        },
        events: {
          onReady: (e) => {
            if (!isIOS && e.target.setVolume) e.target.setVolume(state.currentVol);
            if (state.muted && e.target.mute) e.target.mute();
          }
        }
      });

      // –ü—É–ª—å—Ç –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –≤–∏–¥–µ–Ω
      volWrap.style.display = "";

    } catch {
      // –§–æ–ª–±—ç–∫ ‚Äî –æ–±—ã—á–Ω—ã–π iframe (–±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏)
      state.usingFallback = true;
      frame.innerHTML = `
        <iframe
          title="YouTube video player"
          src="https://www.youtube-nocookie.com/embed/${id}?autoplay=1&rel=0&modestbranding=1&controls=1"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
          allowfullscreen
          referrerpolicy="origin-when-cross-origin"
          style="width:100%; height:100%; border:0; display:block"
        ></iframe>`;
      volWrap.style.display = "none";
    }
  }

  function stopAndHide() {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –ø—Ä—è—á–µ–º, –Ω–æ –¥–æ–∫ –æ—Å—Ç–∞–≤–ª—è–µ–º –≤ DOM
    if (state.player) {
      try { state.player.stopVideo?.(); state.player.destroy?.(); } catch {}
      state.player = null;
    }
    frame.innerHTML = "";
    hideDock();
  }

  // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Ä—É–∂—É —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–µ—Ç–æ–¥—ã –≤ instance (–Ω–∞ —Å–ª—É—á–∞–π –Ω—É–∂–¥—ã)
  instances.get(modalEl).openPlayer = openPlayer;
  instances.get(modalEl).stopAndHide = stopAndHide;
}

/**
 * –ü–æ–ª–Ω—ã–π –¥–µ–º–æ–Ω—Ç–∞–∂ –º–∏–Ω–∏-–ø–ª–µ–µ—Ä–∞ –∏–∑ –º–æ–¥–∞–ª–∫–∏
 * (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∫–∏)
 * @param {HTMLElement} modalEl
 */
export function destroyMiniPlayer(modalEl) {
  const inst = instances.get(modalEl);
  if (!inst) return;

  // –°–Ω—è—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  try {
    inst.closeBtn.removeEventListener("click", inst.onClose);
    inst.muteBtn.removeEventListener("click", inst.onMute);
    inst.slider.removeEventListener("input", inst.onVol);
    modalEl.removeEventListener("click", inst.onModalClick);
  } catch {}

  // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —Ä–∞–∑—Ä—É—à–∏—Ç—å –ø–ª–µ–µ—Ä
  try {
    if (inst.state?.player) {
      inst.state.player.stopVideo?.();
      inst.state.player.destroy?.();
    }
  } catch {}

  // –£–¥–∞–ª–∏—Ç—å DOM –¥–æ–∫
  try { inst.dock.remove(); } catch {}

  instances.delete(modalEl);
}
